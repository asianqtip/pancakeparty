{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport bodyParser from \"body-parser\";\r\nimport cookieParser from \"cookie-parser\";\r\nimport express from \"express\";\r\nimport logger from \"morgan\";\r\nimport path from \"path\";\r\nimport passport from \"passport\";\r\nimport errorHandler from \"errorhandler\";\r\nimport session  from \"express-session\";\r\n\r\nvar flash = require('connect-flash');\r\n\r\nimport { IndexRoute } from \"./routes/index\";\r\nimport { LoginRoute } from \"./routes/login\";\r\nimport { RegisterRoute } from \"./routes/register\";\r\nimport { BrowseRoute } from \"./routes/browse\";\r\nimport {AddRecipeRoute} from \"./routes/addrecipe\";\r\nimport {LogoutRoute} from \"./routes/logout\";\r\nimport {MyAccountRoute} from \"./routes/myaccount\";\r\nimport {RecipeRoute} from \"./routes/recipe\";\r\nimport {SearchRoute} from \"./routes/search\";\r\nimport {LikeRoute} from \"./routes/like\";\r\nimport {DislikeRoute} from \"./routes/dislike\";\r\n\r\n\r\n\r\n/**\r\n * The server.\r\n *\r\n * @class Server\r\n */\r\nexport class Server {\r\n\r\n    public app: express.Application;\r\n\r\n    /**\r\n     * Bootstrap the application.\r\n     *\r\n     * @class Server\r\n     * @method bootstrap\r\n     * @static\r\n     * @return {ng.auto.IInjectorService} Returns the newly created injector for this app.\r\n     */\r\n    public static bootstrap(): Server {\r\n        return new Server();\r\n    }\r\n\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @class Server\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        //create expressjs application\r\n        this.app = express();\r\n\r\n        //configure application\r\n        this.config();\r\n\r\n        //add routes\r\n        this.routes();\r\n    }\r\n\r\n    /**\r\n     * Configure application\r\n     *\r\n     * @class Server\r\n     * @method config\r\n     */\r\n    public config() {\r\n        //add static paths\r\n        this.app.use(express.static(path.join(__dirname, \"../public\")));\r\n        this.app.use(express.static(path.join(__dirname, \"/types.ts\")));\r\n\r\n        //configure pug\r\n        this.app.set(\"views\", path.join(__dirname, \"../views\"));\r\n        this.app.set(\"view engine\", \"pug\");\r\n\r\n        //mount logger\r\n        this.app.use(logger(\"dev\"));\r\n\r\n        //mount json form parser\r\n        this.app.use(bodyParser.json());\r\n        this.app.use(flash());\r\n\r\n        //mount query string parser\r\n        this.app.use(bodyParser.urlencoded({\r\n            extended: true\r\n        }));\r\n\r\n        //mount cookie parser middleware\r\n        this.app.use(cookieParser(\"SECRET_GOES_HERE\"));\r\n        //this.app.use(session({secret: 'keyboard cat', cookie: { secure: true }}));\r\n        this.app.use(session({\r\n            secret: 'secret',\r\n            saveUninitialized: false,\r\n            resave: false,\r\n            cookie: { maxAge: 100*60*60 }\r\n            }));\r\n        this.app.use(passport.initialize());\r\n        this.app.use(passport.session());\r\n        this.app.use(flash());\r\n        this.app.use((req, res, next) => {\r\n            res.locals.user = req.user;\r\n            next();\r\n        });\r\n        this.app.use((req, res, next) => {\r\n            // After successful login, redirect back to the intended page\r\n            if (!req.user &&\r\n                req.path !== \"/login\" &&\r\n                req.path !== \"/register\" &&\r\n                !req.path.match(/^\\/auth/) &&\r\n                !req.path.match(/\\./)) {\r\n                req!.session!.returnTo = req.path;\r\n            } else if (req.user &&\r\n                req.path == \"/addrecipe\") {\r\n                req!.session!.returnTo = req.path;\r\n            }\r\n            next();\r\n        });\r\n        // catch 404 and forward to error handler\r\n        this.app.use(function(err: any, req: express.Request, res: express.Response, next: express.NextFunction) {\r\n            err.status = 404;\r\n            next(err);\r\n        });\r\n\r\n        //error handling\r\n        this.app.use(errorHandler());\r\n    }\r\n\r\n    /**\r\n     * Create and return Router.\r\n     *\r\n     * @class Server\r\n     * @method routes\r\n     * @return void\r\n     */\r\n    private routes() {\r\n        let router: express.Router;\r\n        router = express.Router();\r\n\r\n        IndexRoute.create(router);\r\n        LoginRoute.create(router);\r\n        RegisterRoute.create(router);\r\n        BrowseRoute.create(router);\r\n        AddRecipeRoute.create(router);\r\n        LogoutRoute.create(router);\r\n        MyAccountRoute.create(router);\r\n        RecipeRoute.create(router);\r\n        SearchRoute.create(router);\r\n        LikeRoute.create(router);\r\n        DislikeRoute.create(router);\r\n        //use router middleware\r\n        this.app.use(router);\r\n\r\n    }\r\n\r\n}\r\n\r\n"]}