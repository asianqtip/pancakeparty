{"version":3,"file":"DbClient.js","sourceRoot":"","sources":["../../src/DbClient.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAA0C;AAG1C;IAAA;IA0CA,CAAC;IAvCS,0BAAO,GAAb;;;;;;;wBAEqB,qBAAM,qBAAW,CAAC,OAAO,CAAC,2BAA2B,CAAC,EAAA;;wBAA/D,MAAM,GAAG,SAAsD;wBACnE,KAAA,IAAI,CAAA;wBAAM,qBAAM,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAA;;wBAAjC,GAAK,EAAE,GAAG,SAAuB,CAAC;wBAClC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;wBAC/B,sBAAO,IAAI,CAAC,EAAE,EAAC;;;wBAEf,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;;;;;;KAE9C;IAEY,6BAAU,GAAvB,UAAwB,GAAY,EAAE,GAAa,EAAE,IAAkB;;;;;4BACnE,qBAAM,IAAI,CAAC,OAAO,EAAE;6BACf,IAAI,CAAC,UAAO,EAAO;;;;4CACJ,qBAAM,EAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,EAAA;;wCAAtD,GAAG,GAAG,SAAgD;;;;6BAC/D,CAAC;6BACD,IAAI,CAAC,UAAO,OAAW;;gCACpB,sBAAO,OAAO,EAAC;;6BAClB,CAAC;6BACD,KAAK,CAAC,UAAC,GAAQ;4BACZ,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;4BAC3B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACrB,CAAC,CAAC,EAAA;;wBAVN,SAUM,CAAA;;;;;KACT;IACM,2BAAQ,GAAf,UAAgB,GAAY,EAAE,GAAa;QACvC,IAAI,CAAC,OAAO,EAAE;aACT,IAAI,CAAC,UAAC,EAAO;YACV,OAAO,EAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACpD,CAAC,CAAC;aACD,IAAI,CAAC,UAAC,KAAU;YACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,OAAO,KAAK,CAAC;QACjB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAQ;YACZ,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAA;IACV,CAAC;IAEL,eAAC;AAAD,CAAC,AA1CD,IA0CC;AACD,iBAAS,IAAI,QAAQ,EAAE,CAAC","sourcesContent":["import { MongoClient, Db } from \"mongodb\";\r\nimport { NextFunction, Response, Request } from \"express\";\r\n\r\nclass DbClient {\r\n    public db!: Db;\r\n\r\n    async connect() {\r\n        try {\r\n            let client = await MongoClient.connect(\"mongodb://localhost:27017\");\r\n            this.db = await client.db(\"test\");\r\n            console.log(\"Connected to db\");\r\n            return this.db;\r\n        } catch (error) {\r\n            console.log(\"Unable to connect to db\");\r\n        }\r\n    }\r\n\r\n    public async getRecipes(req: Request, res: Response, next: NextFunction) {\r\n        await this.connect()\r\n            .then(async (db: any) => {\r\n                const arr = await db!.collection(\"Recipes\").find().toArray();\r\n            })\r\n            .then(async (Recipes:any) => {\r\n                return Recipes;\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(\"err.message\");\r\n                console.log(err);\r\n            })\r\n    }\r\n    public getUsers(req: Request, res: Response) {\r\n        this.connect()\r\n            .then((db: any) => {\r\n                return db!.collection(\"Users\").find().toArray();\r\n            })\r\n            .then((Users: any) => {\r\n                console.log(Users);\r\n                return Users;\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(\"err.message\");\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n}\r\nexport = new DbClient();"]}