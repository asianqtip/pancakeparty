{"version":3,"file":"UserController.js","sourceRoot":"","sources":["../../../src/controllers/UserController.ts"],"names":[],"mappings":";;AACA,kCAAgC;AAKhC;IAAA;IAkBA,CAAC;IAhBU,sBAAO,GAAG,UAAC,GAAY,EAAE,GAAa;QACrC,IAAA,aAAiD,EAA/C,sBAAQ,EAAE,sBAAQ,EAAE,oCAA2B,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,eAAe,CAAC,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC;QAEvC,IAAG,QAAQ,IAAI,eAAe,EAAE;YAC5B,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;YAC9C,OAAO,GAAG,CAAC,MAAM,CAAC,UAAU,EAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACnE;QACD,IAAI,IAAI,GAAG,IAAI,YAAI,CAAC,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACtB,CAAC,CAAA;IAEL,qBAAC;CAAA,AAlBD,IAkBC;AACD,kBAAe,cAAc,CAAC","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { User } from \"../types\";\r\nimport { MongoClient, Db } from \"mongodb\";\r\nimport { check, sanitize, validationResult } from \"express-validator\";\r\nimport flash from \"connect-flash\";\r\n\r\nclass UserController{\r\n\r\n    static newUser = (req: Request, res: Response ) =>{\r\n        let { username, password, confirmPassword} = req.body;\r\n        console.log(\"passsword2 is \" + confirmPassword);\r\n        console.log(\"password is \" + password);\r\n\r\n        if(password != confirmPassword) {\r\n            req.flash('error1', \"Passwords do not match\");\r\n            return res.render('register',{ messages: req.flash('error1') });\r\n        }\r\n        let user = new User(1, username, password);\r\n        console.log(\"username is \" + username);\r\n        console.log(\"password is \" + password);\r\n        console.log(\"user ID is \" + user.UserID);\r\n        res.redirect(\"/\");\r\n    }\r\n\r\n}\r\nexport default UserController;"]}