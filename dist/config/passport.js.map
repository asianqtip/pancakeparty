{"version":3,"file":"passport.js","sourceRoot":"","sources":["../../src/config/passport.ts"],"names":[],"mappings":";;;;;AAAA,sDAAgC;AAChC,kEAA2C;AAC3C,4DAA4D;AAE5D,IAAM,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACxC,IAAM,aAAa,GAAG,wBAAa,CAAC,QAAQ,CAAC;AAE7C,kBAAQ,CAAC,aAAa,CAAW,UAAC,IAAI,EAAE,IAAI;IACxC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACzB,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,kBAAQ,CAAC,eAAe,CAAC,UAAC,IAAI,EAAG,IAAI;IACjC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC3B,IAAM,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC;IAC7C,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC;AAEH,kBAAQ,CAAC,GAAG,CAAC,IAAI,aAAa,CAC1B,UAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI;IACzB,QAAQ,CAAC,OAAO,EAAE;SACb,IAAI,CAAC,UAAC,EAAO;QACV,OAAO,EAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;IACjE,CAAC,CAAC;SACD,IAAI,CAAC,UAAC,IAAS;QACZ,IAAI,CAAC,IAAI,EAAE;YACP,OAAO,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,cAAY,QAAQ,gBAAa,EAAC,CAAC,CAAC;SAC/E;QACG,OAAO,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACjC,CAAC,CAAC;SACD,KAAK,CAAC,UAAC,GAAQ;QACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAA;AAEV,CAAC,CAAC,CAAC,CAAC","sourcesContent":["import passport from \"passport\";\r\nimport passportLocal from \"passport-local\";\r\n//import { Request, Response, NextFunction } from \"express\";\r\n\r\nconst DbClient = require(\"../DbClient\");\r\nconst LocalStrategy = passportLocal.Strategy;\r\n\r\npassport.serializeUser<any, any>((user, done) => {\r\n    console.log(\"serialize\");\r\n    done(undefined, user);\r\n});\r\n\r\npassport.deserializeUser((user,  done) => {\r\n    console.log(\"deserialize\");\r\n    const ObjectId = require('mongodb').ObjectId;\r\n    done(null, user);\r\n});\r\n\r\npassport.use(new LocalStrategy(\r\n    (username, password, done) => {\r\n    DbClient.connect()\r\n        .then((db: any) => {\r\n            return db!.collection(\"Users\").findOne({Username: username});\r\n        })\r\n        .then((user: any) => {\r\n            if (!user) {\r\n                return done(undefined, false, {message: `Username ${username} not found.`});\r\n            }\r\n                return done(undefined, user);\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(err);\r\n                return done(undefined, false, { message: \"Invalid email or password.\" });\r\n            })\r\n\r\n    }));"]}