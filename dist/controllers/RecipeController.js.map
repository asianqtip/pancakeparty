{"version":3,"file":"RecipeController.js","sourceRoot":"","sources":["../../src/controllers/RecipeController.ts"],"names":[],"mappings":"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","sourcesContent":["import {Request, Response} from \"express\";\r\nimport {Recipe, Ingredient, Instruction} from \"../types\";\r\nconst ObjectId = require('mongodb').ObjectId;\r\n\r\n/** RecipeController()\r\n *  Manages all request regarding recipes.\r\n *  Manages interactions of the Recipe Collections of the\r\n *  database and the application\r\n *\r\n */\r\nconst DbClient = require(\"../DbClient\");\r\n\r\nclass RecipeController{\r\n\r\n    /** RetrieveRecipes()\r\n     * Connects to database and renders the recipe data for the\r\n     * /browse page\r\n     *\r\n     */\r\n    static retrieveRecipes ( req: Request, res: Response) {\r\n        DbClient.connect()\r\n            .then((db: any) => {\r\n                return db!.collection(\"Recipes\").find().toArray();\r\n            })\r\n            .then((Recipes: any) => {\r\n                res.status(200).render(\"browse\", { Recipes: Recipes, errors: req.flash('errors'),  success:req.flash('success') } );\r\n\r\n            })\r\n            .catch((err: any) => {\r\n                req.flash('errors', \"Oops! Something went wrong\");\r\n                res.status(400).redirect(\"/login\");\r\n            })\r\n    }\r\n    static queryRecipes ( req: Request, res: Response) {\r\n        DbClient.connect()\r\n            .then((db: any) => {\r\n                return db!.collection(\"Recipes\").find({ $or : [{ title: { $regex: req.body.query, $options: 'i' }}, { \"ingredients.name\" : { $regex: req.body.query, $options : 'i' }}]}).toArray();\r\n            })\r\n            .then((Recipes: any) => {\r\n                if (Recipes.length>0) {\r\n                    if(req.body.sort == 'Highest Likes')\r\n                        Recipes.sort((a, b) => (a.rating.Upvotes< b.rating.Upvotes) ? 1 : -1);\r\n                    else if(req.body.sort == 'Highest Dislikes')\r\n                        Recipes.sort((a, b) => (a.rating.Downvotes < b.rating.Downvotes) ? 1 : -1);\r\n                    else if(req.body.sort == 'Recipe Title Z-A')\r\n                        Recipes.sort((a, b) => (a.title < b.title) ? 1 : -1);\r\n                    else if(req.body.sort == 'Recipe Title A-Z')\r\n                        Recipes.sort((a, b) => (a.title > b.title) ? 1 : -1);\r\n                    res.render(\"search\", {\r\n                        Recipes: Recipes,\r\n                        query: req.body.query,\r\n                        sort: req.body.sort,\r\n                        errors: req.flash('errors'),\r\n                        success: req.flash('success')\r\n                    });\r\n                }\r\n                else\r\n                    res.status(204).render(\"search\", { query: req.body.query, errors: req.flash('errors'),  success:req.flash('success') } );\r\n\r\n            })\r\n            .catch((err: any) => {\r\n                req.flash('errors', \"Oops! Something went wrong\");\r\n                res.status(400).redirect(\"/\")\r\n            })\r\n    }\r\n    static newRecipe = (req: Request, res: Response ) =>{\r\n        let {rtitle, esttime, name, quantity, unit, optional, description } = req.body;\r\n        let instructions = new Array();\r\n        let ingredients = new Array();\r\n        if (Array.isArray(description))\r\n        {\r\n            for(let j=0; j<description.length;j++){\r\n                instructions[j] = new Instruction(j+1, description[j]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            instructions[0] = new Instruction(1, description);\r\n        }\r\n        if (Array.isArray(name))\r\n        {\r\n            for(let i=0; i<name.length;i++){\r\n                ingredients[i] = new Ingredient(name[i],quantity[i],unit[i],optional[i]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            ingredients[0] = new Ingredient(name,quantity,unit,optional);\r\n        }\r\n        let recipe = new Recipe(rtitle, req!.user!['Username'], ingredients, instructions, new Date(), esttime);\r\n        DbClient.connect()\r\n            .then((db: any)=>{\r\n            db!.collection(\"Recipes\").insertOne(recipe);\r\n        })\r\n            .then(() =>{\r\n                req.flash('success', 'Recipe added!');\r\n                res.status(201).redirect(\"/addrecipe\");\r\n        })\r\n        .catch((err: any) => {\r\n            req.flash('errors', \"Oops! Something went wrong\");\r\n            return res.status(400).render('addrecipe',{ errors: req.flash('errors') });\r\n        });\r\n    };\r\n\r\n    static async getAccountRecipes ( req: Request, res: Response) {\r\n        DbClient.connect()\r\n            .then((db: any) => {\r\n                const retrieveRecipes = async callback => {\r\n                    const myRecipes = await db!.collection(\"Recipes\").find({username: req!.user!['Username']}).toArray();\r\n                    const favorites = await db!.collection(\"Favorites\").find({username: req!.user!['Username']}).toArray();\r\n                    let favTitles: Array<string> = [];\r\n                    for (let fav of favorites) favTitles.push(fav.RecipeTitle);\r\n                    let myFavRecipes = await db!.collection(\"Recipes\").find({title: {$in: favTitles} }).toArray();\r\n\r\n                    let Recipes: {[id: string]: Array<string>} = {};\r\n                    Recipes[\"myRecipes\"] = myRecipes;\r\n                    Recipes[\"Favorites\"] = myFavRecipes;\r\n                    callback(Recipes);\r\n                };\r\n                retrieveRecipes(Recipes => res.render(\"myaccount\", {MyRecipes: Recipes[\"myRecipes\"],\r\n                    Favorites: Recipes[\"Favorites\"], errors: req.flash('errors'), success: req.flash('success') }));\r\n            })\r\n            .catch((err: any) => {\r\n                req.flash('errors', \"Oops! Something went wrong\");\r\n                res.status(400).redirect(\"/\");\r\n            })\r\n    }\r\n\r\n    static getRecipe ( req: Request, res: Response) {\r\n        DbClient.connect()\r\n            .then((db: any) => {\r\n                let o_id = new ObjectId(req.params.name);\r\n                return db!.collection(\"Recipes\").findOne({_id: o_id });\r\n            })\r\n            .then((Recipe: any) => {\r\n                if (req!.user!['Username']== Recipe.username)\r\n                    res.status(200).render(\"recipe\", { Recipe: Recipe, errors: req.flash('errors'),  success:req.flash('success') } );\r\n                else {\r\n                    req.flash('errors', 'Not Authorized');\r\n                    res.status(400).redirect(\"/\");\r\n                }\r\n            })\r\n            .catch((err: any) => {\r\n                req.flash('errors', \"Oops! Something went wrong\");\r\n                res.status(400).redirect(\"/\");\r\n            })\r\n    }\r\n    static likeRecipe ( req: Request, res: Response) {\r\n        DbClient.connect()\r\n            .then((db: any) => {\r\n                let o_id = new ObjectId(req.body.id);\r\n                return db!.collection(\"Recipes\").findOneAndUpdate({_id: o_id }, {$inc: { \"rating.Upvotes\": 1}}, {returnOriginal: false});\r\n            })\r\n            .then((Recipe: any) => {\r\n                res.status(200).send((Recipe.value.rating.Upvotes).toString());\r\n            })\r\n            .catch((err: any) => {\r\n                req.flash('errors', \"Oops! Something went wrong\");\r\n                res.status(400).redirect( \"/\");\r\n            })\r\n    }\r\n    static dislikeRecipe( req: Request, res: Response) {\r\n        DbClient.connect()\r\n            .then((db: any) => {\r\n                let o_id = new ObjectId(req.body.id);\r\n                return db!.collection(\"Recipes\").findOneAndUpdate({_id: o_id }, {$inc: { \"rating.Downvotes\": 1}},{returnOriginal: false});\r\n            })\r\n            .then((Recipe: any) => {\r\n                res.status(200).send((Recipe.value.rating.Downvotes).toString());\r\n            })\r\n            .catch((err: any) => {\r\n                req.flash('errors', \"Oops! Something went wrong\");\r\n                res.redirect(\"/browse\", 404);\r\n            })\r\n    }\r\n    static geteditRecipe ( req: Request, res: Response) {\r\n        DbClient.connect()\r\n            .then((db: any) => {\r\n                let o_id = new ObjectId(req.params.name);\r\n                return db!.collection(\"Recipes\").findOne({_id: o_id });\r\n            })\r\n            .then((Recipe: any) => {\r\n                res.status(200).render(\"editrecipe\", { Recipe: Recipe, errors: req.flash('errors'),  success:req.flash('success') } );\r\n            })\r\n            .catch((err: any) => {\r\n                req.flash('errors', \"Oops! Something went wrong\");\r\n                res.status(400).redirect(\"/\");\r\n            })\r\n    }\r\n\r\n    static deleteRecipe ( req: Request, res: Response) {\r\n        let o_id = new ObjectId(req.params.name);\r\n        DbClient.connect()\r\n            .then((db: any) => {\r\n                db!.collection(\"Recipes\").deleteOne({_id: o_id });\r\n                req.flash('success', 'Recipe deleted');\r\n                res.status(200).redirect(\"/myaccount\");\r\n            })\r\n            .catch((err: any) => {\r\n                req.flash('errors', \"Oops! Something went wrong\");\r\n                res.status(400).redirect(\"/\");\r\n            })\r\n    }\r\n    static editRecipe ( req: Request, res: Response) {\r\n        let o_id = new ObjectId(req.params.name);\r\n        let {rtitle, esttime, name, quantity, unit, optional, description } = req.body;\r\n        let instructions = new Array();\r\n        let ingredients = new Array();\r\n        if (Array.isArray(description))\r\n        {\r\n            for(let j=0; j<description.length;j++){\r\n                instructions[j] = new Instruction(j+1, description[j]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            instructions[0] = new Instruction(1, description);\r\n        }\r\n        if (Array.isArray(name))\r\n        {\r\n            for(let i=0; i<name.length;i++){\r\n                ingredients[i] = new Ingredient(name[i],quantity[i],unit[i],optional[i]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            ingredients[0] = new Ingredient(name,quantity,unit,optional);\r\n        }\r\n        let recipe = new Recipe(rtitle, req!.user!['Username'], ingredients, instructions, new Date(), esttime);\r\n        DbClient.connect()\r\n            .then((db: any) => {\r\n                db!.collection(\"Recipes\").replaceOne({_id: o_id }, recipe);\r\n                req.flash('success', 'Recipe edited');\r\n                res.status(200).redirect(\"/myaccount\");\r\n            })\r\n            .catch((err: any) => {\r\n                req.flash('errors', \"Oops! Something went wrong\");\r\n                res.status(400).redirect(\"/\")\r\n            })\r\n    }\r\n\r\n}\r\nexport default RecipeController;"]}