{"version":3,"file":"UserController.js","sourceRoot":"","sources":["../../src/controllers/UserController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { User } from \"../types\";\r\nconst DbClient = require(\"../DbClient\");\r\n\r\nclass UserController {\r\n    static newUser = (req: Request, res: Response) => {\r\n        let {username, password, confirmPassword} = req.body;\r\n\r\n        if (UserController.findUser(username) != null) {\r\n            req.flash('errors', \"User already exists\");\r\n            return res.render('register', {errors: req.flash('errors')});\r\n        }\r\n        if (password != confirmPassword) {\r\n            req.flash('errors', \"Passwords do not match\");\r\n            return res.render('register', {errors: req.flash('errors')});\r\n        }\r\n        let user = new User(username, password);\r\n        DbClient.connect()\r\n            .then((db: any) => {\r\n                db!.collection(\"Users\").insertOne(user)\r\n            }).then(() =>{\r\n            req.flash('success', 'User registered!');\r\n            res.status(201).redirect(\"/\");\r\n        }).catch((err: any) => {\r\n            req.flash('errors', \"Oops! Something went wrong.\");\r\n            res.status(400).redirect(\"/\")\r\n        })\r\n    };\r\n    static addtofav( req: Request, res: Response) {\r\n        console.log(req.body);\r\n        let fav = {};\r\n        fav[req.body.name] = req.body;\r\n        DbClient.connect()\r\n            .then((db: any) => {\r\n                return db!.collection(\"Users\").findOne({Username: req.user!['Username']});\r\n            })\r\n            .then((user: any) => {\r\n                user.favs.push({fav});\r\n            })\r\n            .catch((err: any) => {\r\n                req.flash('errors', \"Oops! Something went wrong\");\r\n                res.status(400).redirect(\"/\")\r\n            })\r\n    }\r\n    static findUser = (username) => {\r\n        DbClient.connect()\r\n            .then((db: any) => {\r\n                return db!.collection(\"Users\").findOne({Username: username});\r\n            })\r\n            .then((user: any) => {\r\n                if (!user)\r\n                    return null;\r\n                return user;\r\n            })\r\n            .catch((err: any) => {\r\n                return err;\r\n            })\r\n\r\n    };\r\n}\r\nexport default UserController;"]}