{"version":3,"file":"myaccount.js","sourceRoot":"","sources":["../../src/routes/myaccount.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAEA,iCAAoC;AACpC,qFAA+D;AAG/D;IAAoC,kCAAS;IAczC;eACI,iBAAO;IACX,CAAC;IAba,qBAAM,GAApB,UAAqB,MAAc;QAC/B,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,UAAC,GAAY,EAAE,GAAa;YACjD,IAAG,GAAG,CAAC,eAAe,EAAE,EAAE;gBACtB,0BAAgB,CAAC,iBAAiB,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;aAC/C;iBAAM;gBACH,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;gBACtC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;aACzB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAKL,qBAAC;AAAD,CAAC,AAjBD,CAAoC,iBAAS,GAiB5C;AAjBY,wCAAc","sourcesContent":["\r\nimport { Request, Response, Router } from \"express\";\r\nimport { BaseRoute } from \"./route\";\r\nimport RecipeController from \"../controllers/RecipeController\";\r\n\r\n\r\nexport class MyAccountRoute extends BaseRoute {\r\n    protected recipes: any;\r\n\r\n    public static create(router: Router) {\r\n        router.get(\"/myaccount\", (req: Request, res: Response) => {\r\n            if(req.isAuthenticated()) {\r\n                RecipeController.getAccountRecipes(req,res);\r\n            } else {\r\n                req.flash('errors', 'Not Authorized');\r\n                res.redirect('/login')\r\n            }\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\n"]}